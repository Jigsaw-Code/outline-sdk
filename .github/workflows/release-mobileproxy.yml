name: Release Mobileproxy

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'The existing release tag to upload assets to (e.g., x/v0.0.3). The release for this tag must already exist.'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build_and_release_mobileproxy:
    runs-on: ubuntu-latest
    env:
      OUTPUT_DIR: ${{ github.workspace }}/out
    steps:
      - name: Check out code for the specified tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.release_tag }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "${{ github.workspace }}/x/go.mod"

      - name: Create Output Directory
        run: mkdir -p $OUTPUT_DIR/mobileproxy

      - name: Build gomobile and gobind
        run: go build -o $OUTPUT_DIR/mobileproxy/gomobile golang.org/x/mobile/cmd/gomobile golang.org/x/mobile/cmd/gobind
        working-directory: ${{ github.workspace }}/x

      - name: Build MobileProxy for iOS
        run: |
          echo "Building for iOS..."
          PATH="$OUTPUT_DIR/mobileproxy:$PATH" gomobile bind -ldflags='-s -w' -target=ios -iosversion=11.0 -o "$OUTPUT_DIR/mobileproxy/mobileproxy.xcframework" github.com/Jigsaw-Code/outline-sdk/x/mobileproxy
        working-directory: ${{ github.workspace }}/x

      - name: Build MobileProxy for Android
        run: |
          echo "Building for Android..."
          PATH="$OUTPUT_DIR/mobileproxy:$PATH" gomobile bind -ldflags='-s -w' -target=android -androidapi=21 -o "$OUTPUT_DIR/mobileproxy/mobileproxy.aar" github.com/Jigsaw-Code/outline-sdk/x/mobileproxy
        working-directory: ${{ github.workspace }}/x

      - name: Install GitHub CLI
        uses: actions4gh/setup-gh@v1

      - name: Upload Artifacts to Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ inputs.release_tag }}
        run: |
          echo "Uploading mobileproxy.xcframework to release $RELEASE_TAG"
          gh release upload "$RELEASE_TAG" \
            "$OUTPUT_DIR/mobileproxy/mobileproxy.xcframework" \
            --clobber # Use --clobber to overwrite if the asset already exists

          echo "Uploading mobileproxy.aar to release $RELEASE_TAG"
          gh release upload "$RELEASE_TAG" \
            "$OUTPUT_DIR/mobileproxy/mobileproxy.aar" \
            --clobber # Use --clobber to overwrite if the asset already exists
          echo "Artifacts uploaded successfully to release $RELEASE_TAG."
